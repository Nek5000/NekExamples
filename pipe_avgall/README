This example demonstrates how to post-process files output by avg_all
to calculate rms velocities for pipe flow. There are two cases in this
example: p1.usr and prms.usr, both based on the same mesh.

The mesh is for pipe flow with inflow-outflow boundary conditions in
the streamwise direction. 

CASE I - pipe 
1. pipe.usr is used to "call avg_all" in userchk and
outputs avgp10*, rmsp10* and rm2p10* files.

2. param(68) controls the frequency of files output by the avg_all
routine 

3. It also has recirculation boundary condition implemented which
allows turbulence to develop in a fixed section of the mesh. For this
case, we use the z=0. as the plane for recirculation to the inflow
(located at z=-2.)

Running case 1 will output a few avgp10*, rmsp10* and rm2p10* files.
Run the script "genlist" to make two list files.  avg.list will have
the name of all the avgp10* files and rms.list will have the names of
all the rmsp10* files.
 
CASE II - prms
1. prms.usr reads in information from the avgp10* and rmsp10* files
using the routine auto_averager, and then calculates u_rms, v_rms and
w_rms values along with TKE.

2. In addition to that, prms.usr also calls a routine my_z_average.
This routine averages the data in streamwise direction. Note: since
recirculation boundary condition is implemented from z=-2 to z=0, the
GLL points in this z-range are not used when calculating the average
(this is done via a mask).
